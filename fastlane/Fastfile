# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.80.0"

default_platform :ios

platform :ios do
  
  desc "Submit a new β-Staging build..."
  lane :stage do |options|    
    options[:slack_title] = "Successfully deployed β-Staging build"
    options[:main_app_identifier] = "com.appunite.shoutit"
    options[:kit_identifier] = "com.appunite.shoutit.shoutitkit"
    options[:certificate_path] = "Signing/appunite-inhouse.p12"
    # build for staging
    beta(options)

    # upload crashlytics
    crashlytics
  end
  
  desc "Submit a new β-Staging build..."
  lane :local do |options|    
    options[:slack_title] = "Successfully deployed β-Local build"
    options[:main_app_identifier] = "com.shoutit-iphone.local"
    options[:kit_identifier] = "com.shoutit-iphone.local.shoutitkit"
    options[:certificate_path] = "Signing/appunite-inhouse.p12"
    
    # build for staging
    beta(options)

    # upload crashlytics
    crashlytics
  end
  
  desc "Submit a new β-Staging build..."
  lane :production do |options|    
    options[:slack_title] = "Successfully deployed Testflight build"
    options[:main_app_identifier] = "com.shoutit-iphone"
    options[:kit_identifier] = "com.shoutit-iphone.shoutitkit"
    options[:certificate_path] = "Signing/shoutit-appstore.p12"
    
    # build for staging
    beta(options)

    # upload crashlytics
    pilot(skip_submission: true, wait_processing_interval: 1, app_identifier: options[:main_app_identifier])
  end
  
  private_lane :beta do |options|

    # add identity
    unlock_keychain(password: "8kwz9bb77q")
    import_certificate(certificate_path: options[:certificate_path], certificate_password:"")

    # download prov profiles for share extension
    udid = sigh(app_identifier: options[:kit_identifier])
    ENV["KIT_UDID"] = udid
    
    # download prov profiles for app
    udid = sigh(app_identifier: options[:main_app_identifier])
    ENV["PROJECT_UDID"] = udid
    
    # increase build number
    increment_build_number build_number: ENV["CI_BUILD_ID"]
    
    # build!
    gym

    # upload dSYM to crashlytics
    upload_symbols_to_crashlytics

    # upload artifacts
    au_artifacts_upload

    # send message to slack
    git_hash = `git rev-parse --short HEAD`
    slack(
      message: ENV["SLACK_TITLE"] + " (#{lane_context[SharedValues::BUILD_NUMBER]}).",
      attachment_properties: {
        fields: [{
          title: 'git-hash',
          value: git_hash,
          short: true
        }]
      }
    )

  end
  
  desc "Generate Localization Files"
  lane :localizations do
    au_generate_translations languages: "en ar de", export_dir: "translations/", project_file_path: "shoutit.xcodeproj"
  end

end